declare i32 @getint() 
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)

@s_0 = constant [2 x i8] c" \00"
@s_1 = constant [2 x i8] c"
\00"

@g_a = dso_local global [510 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0]
@g_prime = dso_local global [510 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0]
@g_reflect1 = dso_local global [16 x i32] [i32 -711942876, i32 -1060809599, i32 1758839997, i32 423174272, i32 1412407466, i32 375872692, i32 1543568839, i32 915987033, i32 698198080, i32 -2143283456, i32 2059223660, i32 -34179219, i32 378910912, i32 1498631475, i32 -1853883889, i32 1640319187]
@g_reflect2 = dso_local global [5 x [5 x i32]] [[5 x i32][i32 -1152785601, i32 1891446969, i32 938484211, i32 -1596516698, i32 1681072330], [5 x i32][i32 128222498, i32 1090169129, i32 -347746822, i32 -326257601, i32 -1366930863], [5 x i32][i32 -823961496, i32 2103453081, i32 -402114823, i32 2139806715, i32 -732814375], [5 x i32][i32 1302967469, i32 1623817872, i32 898372270, i32 -812618050, i32 -1403178881], [5 x i32][i32 -1776328495, i32 958769364, i32 47496017, i32 -1384738865, i32 1751940200]]

define dso_local i32 @main() {

main_block_label_0:
	%v_0 = alloca i32
	store i32 2, i32* %v_0
	%v_1 = alloca i32
	%v_2 = call i32 @getint()
	store i32 %v_2, i32* %v_1
	br label %main_block_label_1

main_block_label_1:
	%v_3 = load i32, i32* %v_0
	%v_4 = load i32, i32* %v_1
	%v_5 = icmp slt i32 %v_3, %v_4
	br i1 %v_5, label %main_block_label_2, label %main_block_label_3

main_block_label_2:
	%v_6 = load i32, i32* %v_0
	%v_7 = load i32, i32* %v_0
	%v_8 = getelementptr inbounds [510 x i32], [510 x i32]* @g_a, i32 0, i32 %v_7
	store i32 1, i32* %v_8
	%v_9 = load i32, i32* %v_0
	%v_10 = add i32 %v_9, 1
	store i32 %v_10, i32* %v_0
	br label %main_block_label_1

main_block_label_3:
	store i32 2, i32* %v_0
	%v_11 = alloca i32
	store i32 0, i32* %v_11
	br label %main_block_label_4

main_block_label_4:
	%v_12 = load i32, i32* %v_0
	%v_13 = load i32, i32* %v_1
	%v_14 = icmp slt i32 %v_12, %v_13
	br i1 %v_14, label %main_block_label_5, label %main_block_label_6

main_block_label_5:
	%v_15 = load i32, i32* %v_0
	%v_17 = getelementptr inbounds [510 x i32], [510 x i32]* @g_a, i32 0, i32 %v_15
	%v_16 = load i32, i32* %v_17
	%v_18 = icmp ne i32 %v_16, 0
	br i1 %v_18, label %main_block_label_7, label %main_block_label_8

main_block_label_6:
	store i32 0, i32* %v_0
	br label %main_block_label_15

main_block_label_7:
	%v_19 = load i32, i32* %v_11
	%v_20 = load i32, i32* %v_11
	%v_21 = getelementptr inbounds [510 x i32], [510 x i32]* @g_prime, i32 0, i32 %v_20
	%v_22 = load i32, i32* %v_0
	store i32 %v_22, i32* %v_21
	%v_23 = load i32, i32* %v_11
	%v_24 = add i32 %v_23, 1
	store i32 %v_24, i32* %v_11
	br label %main_block_label_8

main_block_label_8:
	%v_25 = alloca i32
	store i32 0, i32* %v_25
	br label %main_block_label_9

main_block_label_9:
	%v_26 = load i32, i32* %v_25
	%v_27 = load i32, i32* %v_11
	%v_28 = icmp slt i32 %v_26, %v_27
	br i1 %v_28, label %main_block_label_12, label %main_block_label_11

main_block_label_10:
	%v_36 = load i32, i32* %v_0
	%v_37 = load i32, i32* %v_25
	%v_39 = getelementptr inbounds [510 x i32], [510 x i32]* @g_prime, i32 0, i32 %v_37
	%v_38 = load i32, i32* %v_39
	%v_40 = mul i32 %v_36, %v_38
	%v_41 = load i32, i32* %v_0
	%v_42 = load i32, i32* %v_25
	%v_44 = getelementptr inbounds [510 x i32], [510 x i32]* @g_prime, i32 0, i32 %v_42
	%v_43 = load i32, i32* %v_44
	%v_45 = mul i32 %v_41, %v_43
	%v_46 = getelementptr inbounds [510 x i32], [510 x i32]* @g_a, i32 0, i32 %v_45
	store i32 0, i32* %v_46
	%v_47 = load i32, i32* %v_0
	%v_48 = load i32, i32* %v_25
	%v_50 = getelementptr inbounds [510 x i32], [510 x i32]* @g_prime, i32 0, i32 %v_48
	%v_49 = load i32, i32* %v_50
	%v_51 = srem i32 %v_47, %v_49
	%v_52 = icmp eq i32 %v_51, 0
	br i1 %v_52, label %main_block_label_13, label %main_block_label_14

main_block_label_11:
	%v_55 = load i32, i32* %v_0
	%v_56 = add i32 %v_55, 1
	store i32 %v_56, i32* %v_0
	br label %main_block_label_4

main_block_label_12:
	%v_29 = load i32, i32* %v_0
	%v_30 = load i32, i32* %v_25
	%v_32 = getelementptr inbounds [510 x i32], [510 x i32]* @g_prime, i32 0, i32 %v_30
	%v_31 = load i32, i32* %v_32
	%v_33 = mul i32 %v_29, %v_31
	%v_34 = load i32, i32* %v_1
	%v_35 = icmp sle i32 %v_33, %v_34
	br i1 %v_35, label %main_block_label_10, label %main_block_label_11

main_block_label_13:
	br label %main_block_label_11
	br label %main_block_label_14

main_block_label_14:
	%v_53 = load i32, i32* %v_25
	%v_54 = add i32 %v_53, 1
	store i32 %v_54, i32* %v_25
	br label %main_block_label_9

main_block_label_15:
	%v_57 = icmp ne i32 114514, 0
	br i1 %v_57, label %main_block_label_16, label %main_block_label_17

main_block_label_16:
	%v_58 = load i32, i32* %v_0
	%v_60 = getelementptr inbounds [510 x i32], [510 x i32]* @g_a, i32 0, i32 %v_58
	%v_59 = load i32, i32* %v_60
	%v_61 = icmp ne i32 %v_59, 0
	br i1 %v_61, label %main_block_label_18, label %main_block_label_19

main_block_label_17:
	ret i32 0

main_block_label_18:
	%v_62 = load i32, i32* %v_0
	%v_63 = load i32, i32* %v_0
	%v_64 = srem i32 %v_63, 2
	%v_65 = load i32, i32* %v_0
	%v_66 = srem i32 %v_65, 16
	%v_68 = getelementptr inbounds [16 x i32], [16 x i32]* @g_reflect1, i32 0, i32 %v_66
	%v_67 = load i32, i32* %v_68
	%v_69 = mul i32 %v_64, %v_67
	%v_70 = load i32, i32* %v_0
	%v_71 = add i32 %v_70, 1
	%v_72 = srem i32 %v_71, 2
	%v_73 = load i32, i32* %v_0
	%v_74 = srem i32 %v_73, 5
	%v_75 = load i32, i32* %v_0
	%v_76 = srem i32 %v_75, 5
	%v_77 = mul i32 5, %v_74
	%v_78 = add i32 %v_77, %v_76
	%v_79 = getelementptr inbounds [5 x [5 x i32]], [5 x [5 x i32]]* @g_reflect2, i32 0, i32 0, i32 %v_78
	%v_80 = load i32, i32* %v_79
	%v_81 = mul i32 %v_72, %v_80
	%v_82 = add i32 %v_69, %v_81
	call void @putint(i32 %v_62)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @s_0, i64 0, i64 0))
	call void @putint(i32 %v_82)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @s_1, i64 0, i64 0))
	br label %main_block_label_19

main_block_label_19:
	%v_83 = load i32, i32* %v_0
	%v_84 = add i32 %v_83, 1
	store i32 %v_84, i32* %v_0
	%v_85 = load i32, i32* %v_0
	%v_86 = load i32, i32* %v_1
	%v_87 = icmp slt i32 %v_85, %v_86
	br i1 %v_87, label %main_block_label_20, label %main_block_label_21

main_block_label_20:
	br label %main_block_label_15
	br label %main_block_label_22

main_block_label_21:
	br label %main_block_label_17
	br label %main_block_label_22

main_block_label_22:
	br label %main_block_label_15
	br label %main_block_label_17
	br label %main_block_label_15
	br label %main_block_label_17
	br label %main_block_label_15
	br label %main_block_label_17
	br label %main_block_label_15
	br label %main_block_label_17
	br label %main_block_label_15
}


